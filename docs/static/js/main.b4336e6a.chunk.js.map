{"version":3,"sources":["context/CategoriaContext.js","context/RecetasContext.js","components/Error.js","components/Formulario.js","components/Header.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["CategoriaContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","obtenerCategorias","a","axios","get","data","drinks","Provider","value","children","RecetasContext","RecetasProvider","recetas","setRecetas","nombre","categoria","buscarReceta","setBuscarReceta","consultar","setConsultar","obtenerRecetas","url","resultado","Error","mensaje","className","Formulario","error","setError","busqueda","setBusqueda","useContext","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","Header","ModalContext","ModalProvider","idReceta","setIdReceta","recetaSeleccionada","setReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","breakpoints","down","width","up","palette","background","shadows","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","all","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIaA,EAAmBC,0BA2BjBC,EAvBY,SAACC,GAE1B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAXAC,qBAAU,WACR,IAAMC,EAAiB,uCAAG,4BAAAC,EAAA,4DACZ,4DADY,SAGCC,IAAMC,IAFnB,6DADY,OAGlBN,EAHkB,OAIxBC,EAAcD,EAAWO,KAAKC,QAJN,2CAAH,qDAOvBL,MACC,IAGD,cAACR,EAAiBc,SAAlB,CAA2BC,MAAO,CAAEV,cAApC,SACGF,EAAMa,YCvBAC,EAAiBhB,0BA8BfiB,EA5BS,SAACf,GACvB,MAA8BC,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KACA,EAAwChB,mBAAS,CAC/CiB,OAAQ,GACRC,UAAW,KAFb,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,EAAkCpB,oBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACQL,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAahB,OAXAf,qBAAU,WACR,GAAIkB,EAAW,CACb,IAAME,EAAc,uCAAG,8BAAAlB,EAAA,6DACfmB,EADe,iEACiDP,EADjD,cAC6DC,GAD7D,SAEGZ,IAAMC,IAAIiB,GAFb,OAEfC,EAFe,OAGrBT,EAAWS,EAAUjB,KAAKC,QAHL,2CAAH,qDAKpBc,OAED,CAACJ,IAGF,cAACN,EAAeH,SAAhB,CAAyBC,MAAO,CAAEI,UAASK,kBAAiBE,gBAA5D,SACGvB,EAAMa,YC1BAc,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0B3B,oBAAS,GAAnC,6BAEA,OACE,sBAAK4B,UAAU,gDAAf,UACGD,EAAS,QCFHE,EAAa,WACxB,MAA0B7B,oBAAS,GAAnC,mBAAO8B,EAAP,KAAcC,EAAd,KAEA,EAAgC/B,mBAAS,CACvCiB,OAAQ,GACRC,UAAW,KAFb,mBAAOc,EAAP,KAAiBC,EAAjB,KAIQhB,EAAsBe,EAAtBf,OAAQC,EAAcc,EAAdd,UACRjB,EAAeiC,qBAAWtC,GAA1BK,WACR,EAA0CiC,qBAAWrB,GAA7CO,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,aAGnBa,EAAqB,SAACC,GAC1BH,EAAY,2BACPD,GADM,kBAERI,EAAEC,OAAOC,KAAOF,EAAEC,OAAO1B,UAI9B,OACE,uBACEiB,UAAU,SACVW,SAAU,SAACH,GACTA,EAAEI,iBAEa,KAAXvB,GAA+B,KAAdC,GAIrBa,GAAS,GACTX,EAAgBY,GAChBV,GAAa,IALXS,GAAS,IANf,UAcGD,EAAQ,cAAC,EAAD,CAAOH,QAAQ,sCAAyC,KACjE,0BAAUC,UAAU,eAApB,SACE,qFAGF,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBACEU,KAAK,SACLV,UAAU,eACVa,KAAK,OACLC,YAAY,0BACZC,SAAUR,MAId,qBAAKP,UAAU,WAAf,SACE,yBACEA,UAAU,eACVU,KAAK,YACLK,SAAUR,EAHZ,UAKE,wBAAQxB,MAAM,GAAd,wCACCV,EAAW2C,KAAI,SAAC1B,GAAD,OACd,wBAAoCP,MAAOO,EAAU2B,YAArD,SACG3B,EAAU2B,aADA3B,EAAU2B,qBAM7B,qBAAKjB,UAAU,WAAf,SACE,uBACEa,KAAK,SACLb,UAAU,4BACVjB,MAAM,4BCvELmC,EAAS,WACpB,OACE,wBAAQlB,UAAU,WAAlB,SACE,6DCFOmB,EAAelD,0BAkCbmD,EAhCO,SAACjD,GAErB,MAAgCC,mBAAS,MAAzC,mBAAOiD,EAAP,KAAiBC,EAAjB,KACA,EAAwClD,mBAAS,IAAjD,mBAAOmD,EAAP,KAA2BC,EAA3B,KAgBA,OAZAjD,qBAAU,WACR,IAAMkD,EAAa,uCAAG,8BAAAhD,EAAA,yDACf4C,EADe,wDAGdzB,EAHc,mEAGoDyB,GAHpD,SAKI3C,IAAMC,IAAIiB,GALd,OAKdC,EALc,OAMpB2B,EAAU3B,EAAUjB,KAAKC,OAAO,IANZ,2CAAH,qDAQnB4C,MACC,CAACJ,IAGF,cAACF,EAAarC,SAAd,CACEC,MAAO,CACLwC,qBACAD,cACAE,aAJJ,SAOGrD,EAAMa,Y,gBC1Bb,SAAS0C,IAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,OAAK,GACHC,SAAU,YADP,cAEFF,EAAMG,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,SAHN,cAKFL,EAAMG,YAAYG,GAAG,MAAQ,CAC5BD,MAAO,MANN,0BAQQ,KARR,0BASQ,QATR,gCAUcL,EAAMO,QAAQC,WAAWP,OAVvC,0BAWQD,EAAMS,QAAQ,IAXtB,wBAYMT,EAAMU,QAAQ,EAAG,EAAG,IAZ1B,OAgBMC,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEvB,EAAqBxE,mBAASsD,GAAvBmB,EAAP,oBACA,EAAwBzE,oBAAS,GAAjC,mBAAO0E,EAAP,KAAaC,EAAb,KAEMC,EAAUlB,IAWhB,EAAuDxB,qBACrDa,GADMI,EAAR,EAAQA,mBAAoBD,EAA5B,EAA4BA,YAAaE,EAAzC,EAAyCA,UAqBzC,OACE,qBAAKxB,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6B4C,EAAOK,WAEpC,qBACEjD,UAAU,eACVkD,IAAKN,EAAOO,cACZC,IAAG,oBAAeR,EAAOK,YAG3B,sBAAKjD,UAAU,YAAf,UACE,wBACEa,KAAK,SACLb,UAAU,4BACVqD,QAAS,WACP/B,EAAYsB,EAAOU,SA7C7BP,GAAQ,IAyCF,wBAWA,cAACQ,EAAA,EAAD,CACET,KAAMA,EACNU,QAAS,WACPlC,EAAY,MACZE,EAAU,IApDpBuB,GAAQ,IAgDF,SAQE,sBAAKU,MAAOZ,EAAY7C,UAAWgD,EAAQf,MAA3C,UACE,6BAAKV,EAAmB0B,WACxB,oBAAIjD,UAAU,OAAd,4BAEA,kCAAKuB,EAAmBmC,mBAExB,qBACE1D,UAAU,iBACVkD,IAAK3B,EAAmB4B,gBAE1B,2DACA,6BAzDgB,SAAC5B,GAE3B,IADA,IAAIoC,EAAe,GACVC,EAAI,EAAGA,EAAI,GAAIA,IAClBrC,EAAmB,sBACrBoC,EAAaE,KACX,+BACGtC,EAAmB,gBAAD,OAAiBqC,IAAM,IACzCrC,EAAmB,aAAD,OAAcqC,QAMzC,OAAOD,EA4CQG,CAAoBvC,mBC7G1BwC,EAAe,WAC1B,IAAQ5E,EAAYmB,qBAAWrB,GAAvBE,QAER,OACE,qBAAKa,UAAU,WAAf,SACGb,EAAQ6B,KAAI,SAAC4B,GAAD,OACX,cAAC,EAAD,CAA6BA,OAAQA,GAAxBA,EAAOU,eCDfU,EAAM,WACjB,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKhE,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,eCPGiE,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4336e6a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useState, useEffect } from \"react\";\n\n//crear el context\nexport const CategoriaContext = createContext();\n\n//provider es donde se encuentran las funciones y state\n\nconst CategoriasProvider = (props) => {\n  //crear el state del context\n  const [categorias, setCategorias] = useState([]);\n\n  //ejecutar el llamdo a la API\n  useEffect(() => {\n    const obtenerCategorias = async () => {\n      const url = \"https:www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\n\n      const categorias = await axios.get(url);\n      setCategorias(categorias.data.drinks);\n    };\n\n    obtenerCategorias();\n  }, []);\n\n  return (\n    <CategoriaContext.Provider value={{ categorias }}>\n      {props.children}\n    </CategoriaContext.Provider>\n  );\n};\n\nexport default CategoriasProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const RecetasContext = createContext();\n\nconst RecetasProvider = (props) => {\n  const [recetas, setRecetas] = useState([]);\n  const [buscarReceta, setBuscarReceta] = useState({\n    nombre: \"\",\n    categoria: \"\",\n  });\n\n  const [consultar, setConsultar] = useState(false);\n  const { nombre, categoria } = buscarReceta;\n\n  useEffect(() => {\n    if (consultar) {\n      const obtenerRecetas = async () => {\n        const url = `https:www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\n        const resultado = await axios.get(url);\n        setRecetas(resultado.data.drinks);\n      };\n      obtenerRecetas();\n    }\n  }, [buscarReceta]);\n\n  return (\n    <RecetasContext.Provider value={{ recetas, setBuscarReceta, setConsultar }}>\n      {props.children}\n    </RecetasContext.Provider>\n  );\n};\n\nexport default RecetasProvider;\n","import React, { useState } from \"react\";\n\nexport const Error = ({ mensaje }) => {\n  const [error, setError] = useState(false);\n\n  return (\n    <div className=\"alert alert-primary d-flex align-items-center\">\n      {mensaje}{\" \"}\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { CategoriaContext } from \"../context/CategoriaContext\";\nimport { RecetasContext } from \"../context/RecetasContext\";\nimport { Error } from \"./Error\";\n\nexport const Formulario = () => {\n  const [error, setError] = useState(false);\n\n  const [busqueda, setBusqueda] = useState({\n    nombre: \"\",\n    categoria: \"\",\n  });\n  const { nombre, categoria } = busqueda;\n  const { categorias } = useContext(CategoriaContext);\n  const { setBuscarReceta, setConsultar } = useContext(RecetasContext);\n  //funcion para leer los contenidos\n\n  const obtenerDatosReceta = (e) => {\n    setBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <form\n      className=\"col-12\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (nombre === \"\" || categoria === \"\") {\n          setError(true);\n          return;\n        }\n        setError(false);\n        setBuscarReceta(busqueda);\n        setConsultar(true);\n      }}\n    >\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n      <fieldset className=\"text-center>\">\n        <legend>Busca bebidas por Categoría o Ingredientes</legend>\n      </fieldset>\n\n      <div className=\"row mt-4\">\n        <div className=\"col-md-4\">\n          <input\n            name=\"nombre\"\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Buscar por Ingredientes\"\n            onChange={obtenerDatosReceta}\n          />\n        </div>\n\n        <div className=\"col-md-4\">\n          <select\n            className=\"form-control\"\n            name=\"categoria\"\n            onChange={obtenerDatosReceta}\n          >\n            <option value=\"\">-- Selecciona Categoría</option>\n            {categorias.map((categoria) => (\n              <option key={categoria.strCategory} value={categoria.strCategory}>\n                {categoria.strCategory}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-md-4\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-block btn-primary\"\n            value=\"Buscar Bebidas\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <header className=\"bg-alert\">\n      <h1>Busca Recetas de Bebidas</h1>\n    </header>\n  );\n};\n","import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const ModalContext = createContext();\n\nconst ModalProvider = (props) => {\n  //state del provider\n  const [idReceta, setIdReceta] = useState(null);\n  const [recetaSeleccionada, setReceta] = useState({});\n\n  //una vez que tenemos una receta llamar a la api\n\n  useEffect(() => {\n    const obtenerReceta = async () => {\n      if (!idReceta) return;\n\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`;\n\n      const resultado = await axios.get(url);\n      setReceta(resultado.data.drinks[0]);\n    };\n    obtenerReceta();\n  }, [idReceta]);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        recetaSeleccionada,\n        setIdReceta,\n        setReceta,\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React, { useContext, useState } from \"react\";\nimport { ModalContext } from \"../context/ModalContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 450,\n    },\n    maxHeight: 500,\n    overflowY: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport const Receta = ({ receta }) => {\n  //Configuracion del modal de material-ui\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //Extraer los valores del context\n  const { recetaSeleccionada, setIdReceta, setReceta } = useContext(\n    ModalContext\n  );\n\n  //Muestra y formatea los ingredientes\n\n  const mostrarIngredientes = (recetaSeleccionada) => {\n    let ingredientes = [];\n    for (let i = 1; i < 16; i++) {\n      if (recetaSeleccionada[`strIngredients{i}`]) {\n        ingredientes.push(\n          <li>\n            {recetaSeleccionada[`strIngredient${i}`]}{\" \"}\n            {recetaSeleccionada[`strMeasure${i}`]}\n          </li>\n        );\n      }\n    }\n\n    return ingredientes;\n  };\n  return (\n    <div className=\"col-md-4 mb-3\">\n      <div className=\"card\">\n        <h2 className=\"card-header\">{receta.strDrink}</h2>\n\n        <img\n          className=\"card-img-top\"\n          src={receta.strDrinkThumb}\n          all={`Imagen de ${receta.strDrink}`}\n        />\n\n        <div className=\"card-body\">\n          <button\n            type=\"button\"\n            className=\"btn btn-block btn-primary\"\n            onClick={() => {\n              setIdReceta(receta.idDrink);\n              handleOpen();\n            }}\n          >\n            Ver Receta\n          </button>\n\n          <Modal\n            open={open}\n            onClose={() => {\n              setIdReceta(null);\n              setReceta({});\n              handleClose();\n            }}\n          >\n            <div style={modalStyle} className={classes.paper}>\n              <h2>{recetaSeleccionada.strDrink}</h2>\n              <h3 className=\"mt-4\">Instrucciones:</h3>\n\n              <p> {recetaSeleccionada.strInstructions}</p>\n\n              <img\n                className=\"img-fluid my-4\"\n                src={recetaSeleccionada.strDrinkThumb}\n              />\n              <h3>Ingredientes y cantidades</h3>\n              <ul>{mostrarIngredientes(recetaSeleccionada)}</ul>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { RecetasContext } from \"../context/RecetasContext\";\nimport { Receta } from \"./Receta\";\n\nexport const ListaRecetas = () => {\n  const { recetas } = useContext(RecetasContext);\n\n  return (\n    <div className=\"row mt-5\">\n      {recetas.map((receta) => (\n        <Receta key={receta.idDrink} receta={receta} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Header } from \"./components/Header\";\nimport { ListaRecetas } from \"./components/ListaRecetas\";\n\nimport CategoriasProvider from \"./context/CategoriaContext\";\nimport ModalProvider from \"./context/ModalContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\n\nexport const App = () => {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            <ListaRecetas />\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./bootstrap.min.css\";\n\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}